openapi: 3.0.3
info:
  title: SplitBill API
  version: 0.1.0
  description: App to split expenses
paths:
  /apps/api/activate/{uidb64}/{token}/:
    get:
      operationId: activate_retrieve
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uidb64
        schema:
          type: string
        required: true
      tags:
      - activate
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /apps/api/comments/:
    post:
      operationId: comments_create
      tags:
      - comments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /apps/api/expenses/:
    get:
      operationId: expenses_list
      tags:
      - expenses
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Expense'
          description: ''
  /apps/api/expenses/{id}/:
    get:
      operationId: expenses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - expenses
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
          description: ''
    delete:
      operationId: expenses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - expenses
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /apps/api/expenses/{id}/update:
    patch:
      operationId: expenses_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - expenses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExpenseUpdate'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseUpdate'
          description: ''
  /apps/api/expenses/custom:
    post:
      operationId: expenses_custom_create
      tags:
      - expenses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomExpense'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomExpense'
          description: ''
  /apps/api/expenses/equal:
    post:
      operationId: expenses_equal_create
      tags:
      - expenses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EqualExpense'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EqualExpense'
          description: ''
  /apps/api/expenses/percentage:
    post:
      operationId: expenses_percentage_create
      tags:
      - expenses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PercentageExpense'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PercentageExpense'
          description: ''
  /apps/api/register/:
    post:
      operationId: register_create
      tags:
      - register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /apps/api/reset-password/:
    post:
      operationId: reset_password_create
      tags:
      - reset-password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPassword'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPassword'
          description: ''
  /apps/api/reset-password-complete/:
    post:
      operationId: reset_password_complete_create
      tags:
      - reset-password-complete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetNewPassword'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetNewPassword'
          description: ''
  /apps/api/reset-password-confirm/{uidb64}/{token}/:
    get:
      operationId: reset_password_confirm_retrieve
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uidb64
        schema:
          type: string
        required: true
      tags:
      - reset-password-confirm
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /apps/api/split-bill/:
    get:
      operationId: split_bill_list
      tags:
      - split-bill
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SplitBill'
          description: ''
    post:
      operationId: split_bill_create
      tags:
      - split-bill
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SplitBill'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SplitBill'
          description: ''
  /apps/api/split-bill/{id}/:
    get:
      operationId: split_bill_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - split-bill
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SplitBill'
          description: ''
    put:
      operationId: split_bill_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - split-bill
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SplitBill'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SplitBill'
          description: ''
    patch:
      operationId: split_bill_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - split-bill
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSplitBill'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SplitBill'
          description: ''
    delete:
      operationId: split_bill_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - split-bill
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /apps/api/split-bill/{id}/add-member/:
    post:
      operationId: split_bill_add_member_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - split-bill
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMember'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddMember'
          description: ''
  /apps/api/split-bill/{id}/remove-member/:
    post:
      operationId: split_bill_remove_member_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - split-bill
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveMember'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveMember'
          description: ''
  /apps/api/split-bill/{split_bill_id}/members/{id}/update/:
    put:
      operationId: split_bill_members_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: split_bill_id
        schema:
          type: integer
        required: true
      tags:
      - split-bill
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SplitBillMemberUpdate'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SplitBillMemberUpdate'
          description: ''
    patch:
      operationId: split_bill_members_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: split_bill_id
        schema:
          type: integer
        required: true
      tags:
      - split-bill
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSplitBillMemberUpdate'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SplitBillMemberUpdate'
          description: ''
  /apps/api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /apps/api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /apps/api/users/:
    get:
      operationId: users_list
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserUpdate'
          description: ''
    post:
      operationId: users_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdate'
          description: ''
  /apps/api/users/{id}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdate'
          description: ''
    put:
      operationId: users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdate'
          description: ''
    patch:
      operationId: users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserUpdate'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdate'
          description: ''
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    AddMember:
      type: object
      properties:
        alias:
          type: string
        email:
          type: string
          format: email
      required:
      - alias
    Comment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        text:
          type: string
        date_created:
          type: string
          format: date-time
          readOnly: true
        split_bill:
          type: integer
      required:
      - author
      - date_created
      - id
      - split_bill
      - text
    CustomExpense:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        paid_by:
          type: integer
          nullable: true
        assignments:
          type: object
          additionalProperties:
            type: string
            format: decimal
            pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          writeOnly: true
        date:
          type: string
          format: date
        split_bill:
          type: integer
        split_type:
          type: string
          readOnly: true
      required:
      - amount
      - assignments
      - id
      - split_bill
      - split_type
      - title
    EqualExpense:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        paid_by:
          type: integer
          nullable: true
        assignments:
          type: array
          items:
            type: integer
          writeOnly: true
        date:
          type: string
          format: date
        split_bill:
          type: integer
        split_type:
          type: string
          readOnly: true
          default: equal
      required:
      - amount
      - assignments
      - id
      - split_bill
      - split_type
      - title
    Expense:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        split_type:
          $ref: '#/components/schemas/SplitTypeEnum'
        paid_by:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        assignments:
          type: string
          readOnly: true
        date:
          type: string
          format: date
      required:
      - amount
      - assignments
      - id
      - paid_by
      - split_type
      - title
    ExpenseUpdate:
      type: object
      properties:
        split_type:
          $ref: '#/components/schemas/SplitTypeEnum'
        assignments: {}
      required:
      - assignments
      - split_type
    PatchedExpenseUpdate:
      type: object
      properties:
        split_type:
          $ref: '#/components/schemas/SplitTypeEnum'
        assignments: {}
    PatchedSplitBill:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        date_created:
          type: string
          format: date-time
          readOnly: true
        currency:
          type: string
          maxLength: 3
        owner:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        members:
          type: array
          items:
            $ref: '#/components/schemas/SplitBillMember'
          readOnly: true
        member_inputs:
          type: array
          items:
            type: object
            additionalProperties: {}
          writeOnly: true
          description: 'List of { ''email'': str (optional), ''alias'': str (optional)
            }'
        expenses:
          type: array
          items:
            $ref: '#/components/schemas/Expense'
          readOnly: true
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
          readOnly: true
        balances:
          type: string
          readOnly: true
        active:
          type: boolean
    PatchedSplitBillMemberUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        alias:
          type: string
          nullable: true
          maxLength: 255
    PatchedUserUpdate:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
    PercentageExpense:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        paid_by:
          type: integer
          nullable: true
        assignments:
          type: object
          additionalProperties:
            type: string
            format: decimal
            pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          writeOnly: true
        date:
          type: string
          format: date
        split_bill:
          type: integer
        split_type:
          type: string
          readOnly: true
      required:
      - amount
      - assignments
      - id
      - split_bill
      - split_type
      - title
    Register:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
      required:
      - password
      - username
    RemoveMember:
      type: object
      properties:
        alias:
          type: string
      required:
      - alias
    ResetPassword:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SetNewPassword:
      type: object
      properties:
        uidb64:
          type: string
        token:
          type: string
        password:
          type: string
          writeOnly: true
          minLength: 8
      required:
      - password
      - token
      - uidb64
    SplitBill:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        date_created:
          type: string
          format: date-time
          readOnly: true
        currency:
          type: string
          maxLength: 3
        owner:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        members:
          type: array
          items:
            $ref: '#/components/schemas/SplitBillMember'
          readOnly: true
        member_inputs:
          type: array
          items:
            type: object
            additionalProperties: {}
          writeOnly: true
          description: 'List of { ''email'': str (optional), ''alias'': str (optional)
            }'
        expenses:
          type: array
          items:
            $ref: '#/components/schemas/Expense'
          readOnly: true
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
          readOnly: true
        balances:
          type: string
          readOnly: true
        active:
          type: boolean
      required:
      - balances
      - comments
      - currency
      - date_created
      - expenses
      - id
      - members
      - owner
      - title
    SplitBillMember:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
          nullable: true
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        alias:
          type: string
          nullable: true
          maxLength: 255
      required:
      - id
      - user
    SplitBillMemberUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        alias:
          type: string
          nullable: true
          maxLength: 255
      required:
      - id
    SplitTypeEnum:
      enum:
      - equal
      - percentage
      - custom
      type: string
      description: |-
        * `equal` - Equal
        * `percentage` - Percentage
        * `custom` - Custom
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - id
      - username
    UserUpdate:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
      required:
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
servers:
- url: http://localhost:8000
  description: Production server
